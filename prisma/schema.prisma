// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Coffee {
  id          Int           @id @default(autoincrement())
  nome        String
  tipo        String
  preco       Float
  descricao   String
  tags        TagCafe[]
  pedidos     ItemPedido[]
}

model TagCafe {
  id        Int      @default(autoincrement()) @id
  nome      String
  cafeId    Int
  cafe      Coffee   @relation(fields: [cafeId], references: [id])
}

model Cliente {
  id          Int           @default(autoincrement()) @id
  nome        String
  email       String        @unique
  telefone    String
  pedidos     Pedido[]
}

model ItemPedido {
  id          Int       @default(autoincrement()) @id
  cafeId      Int
  quantidade  Int
  preco       Float
  cafe        Coffee    @relation(fields: [cafeId], references: [id])
  Pedido Pedido[]
}

model Pedido {
  id         Int           @default(autoincrement()) @id
  clienteId   Int
  data        DateTime      @default(now())
  total       Float
  cliente     Cliente       @relation(fields: [clienteId], references: [id])
  itens       ItemPedido[]
  Entrega Entrega[]
}

model Entrega {
  id                Int       @default(autoincrement()) @id
  pedidoId          Int
  enderecoEntrega   String
  status            String    // pendente, em tr√¢nsito, entregue
  dataPrevistaEntrega DateTime
  pedido            Pedido    @relation(fields: [pedidoId], references: [id])
}